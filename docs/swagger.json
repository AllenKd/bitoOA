{
    "swagger": "2.0",
    "info": {
        "description": "API Documentation",
        "title": "Backend API",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "paths": {
        "/": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hello"
                ],
                "summary": "Hello Page",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.hello"
                        }
                    }
                }
            }
        },
        "/api/v1/matches/like": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V1",
                    "Match"
                ],
                "summary": "Send a like from a user to another.",
                "parameters": [
                    {
                        "description": "Log",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.HttpLikeReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response",
                        "schema": {
                            "$ref": "#/definitions/types.HttpLikeResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.HttpRespError"
                        }
                    }
                }
            }
        },
        "/api/v1/matches/popular-users": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V1",
                    "Matches"
                ],
                "summary": "Find the most N possible matched single people, where N is a request parameter",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit, default=10",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response",
                        "schema": {
                            "$ref": "#/definitions/types.HttpGetPopularUsersResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.HttpRespError"
                        }
                    }
                }
            }
        },
        "/api/v1/user": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V1",
                    "User"
                ],
                "summary": "Add a new user to the matching system and find any possible matches for the new user.",
                "parameters": [
                    {
                        "description": "Log",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.HttpCreateUserReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response",
                        "schema": {
                            "$ref": "#/definitions/types.HttpCreateUserResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.HttpRespError"
                        }
                    }
                }
            }
        },
        "/api/v1/users/{userId}": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V1",
                    "User"
                ],
                "summary": "Remove a user from the matching system so that the user cannot be matched anymore.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response",
                        "schema": {
                            "$ref": "#/definitions/types.HttpRespBase"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.HttpRespError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "db.User": {
            "type": "object",
            "properties": {
                "gender": {
                    "description": "0 for female, 1 for male",
                    "type": "integer",
                    "example": 1
                },
                "height": {
                    "type": "integer",
                    "example": 180
                },
                "id": {
                    "type": "string",
                    "example": "c30790bf-75e0-4cd3-9ec2-c25662f77e33"
                },
                "name": {
                    "type": "string",
                    "example": "Bob"
                },
                "numberOfWantedDates": {
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "handler.hello": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Hello"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2021-07-24T20:01:25.874565+08:00"
                }
            }
        },
        "types.HttpCreateUserReq": {
            "type": "object",
            "properties": {
                "gender": {
                    "description": "0 for female, 1 for male",
                    "type": "integer",
                    "example": 1
                },
                "height": {
                    "type": "integer",
                    "example": 180
                },
                "matchesLimit": {
                    "description": "optional, default=10",
                    "type": "integer",
                    "example": 10
                },
                "name": {
                    "type": "string",
                    "example": "Bob"
                },
                "numberOfWantedDates": {
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "types.HttpCreateUserResp": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 3000
                },
                "data": {
                    "$ref": "#/definitions/types.HttpCreateUserRespData"
                },
                "message": {
                    "type": "string",
                    "example": "ok"
                },
                "requestId": {
                    "type": "string",
                    "example": "b8974256-1f17-477f-8638-c7ebbac656d7"
                }
            }
        },
        "types.HttpCreateUserRespData": {
            "type": "object",
            "properties": {
                "candidates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.User"
                    }
                },
                "userId": {
                    "type": "string",
                    "example": "30e897aa-2161-481b-9f61-e0700f467bba"
                }
            }
        },
        "types.HttpGetPopularUserRespData": {
            "type": "object",
            "properties": {
                "popularUsers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.User"
                    }
                }
            }
        },
        "types.HttpGetPopularUsersResp": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 3000
                },
                "data": {
                    "$ref": "#/definitions/types.HttpGetPopularUserRespData"
                },
                "message": {
                    "type": "string",
                    "example": "ok"
                },
                "requestId": {
                    "type": "string",
                    "example": "b8974256-1f17-477f-8638-c7ebbac656d7"
                }
            }
        },
        "types.HttpLikeReq": {
            "type": "object",
            "properties": {
                "fromUserId": {
                    "type": "string",
                    "example": "30e897aa-2161-481b-9f61-e0700f467bba"
                },
                "toUserId": {
                    "type": "string",
                    "example": "c30790bf-75e0-4cd3-9ec2-c25662f77e33"
                }
            }
        },
        "types.HttpLikeResp": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 3000
                },
                "data": {
                    "$ref": "#/definitions/types.HttpLikeRespData"
                },
                "message": {
                    "type": "string",
                    "example": "ok"
                },
                "requestId": {
                    "type": "string",
                    "example": "b8974256-1f17-477f-8638-c7ebbac656d7"
                }
            }
        },
        "types.HttpLikeRespData": {
            "type": "object",
            "properties": {
                "matched": {
                    "description": "true if users like each other",
                    "type": "boolean"
                }
            }
        },
        "types.HttpRespBase": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 3000
                },
                "message": {
                    "type": "string",
                    "example": "ok"
                },
                "requestId": {
                    "type": "string",
                    "example": "b8974256-1f17-477f-8638-c7ebbac656d7"
                }
            }
        },
        "types.HttpRespError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 1024
                },
                "message": {
                    "type": "string",
                    "example": "token unauthorized"
                },
                "requestId": {
                    "type": "string",
                    "example": "27c0a70e-59ab-4a94-872c-5f014aaa047f"
                }
            }
        }
    }
}